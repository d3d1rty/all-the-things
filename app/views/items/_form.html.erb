<%= form_with(model: item, url: path, method: method, data: { turbo: false }) do |f| %>
  <%= hidden_field_tag 'customer_id', (@customer_id || params[:customer_id]) if path == save_item_pawn_item_flow_path %>

  <%= render(FormGroupComponent.new(form: f, field: :name, errors: item.errors)) do |c| %>
    <%= c.label 'Product Name' %>
    <%= c.text html_options: {} %>
  <% end %>

  <%= render(FormGroupComponent.new(form: f, field: :sku, errors: item.errors)) do |c| %>
    <%= c.label 'SKU' %>
    <%= c.text html_options: {} %>
  <% end %>

  <%= render(FormGroupComponent.new(form: f, field: :price, errors: item.errors)) do |c| %>
    <%= c.label 'Price' %>
    <%= c.text html_options: {} %>
  <% end %>

  <%= render(FormGroupComponent.new(form: f, field: :cost, errors: item.errors)) do |c| %>
    <%= c.label 'Cost' %>
    <%= c.text html_options: {} %>
  <% end %>

  <%= render(FormGroupComponent.new(form: f, field: :stocked_at, errors: item.errors)) do |c| %>
    <%= c.label 'Stocked on' %>
    <%= c.date html_options: { end_year: DateTime.current.year } %>
  <% end unless [save_item_pawn_item_flow_path, item_pawn_item_flow_path].include?(path) || (item.loan.present? && item.released_at.blank?) %>

  <%= tag.div class: 'text-center mt-6' do %>
    <%= render(ButtonTagComponent.new(color: 'blue', type: :submit, options: { data: { turbo: false } })) do %>
        Save
    <% end %>
  <% end %>
<% end %>
