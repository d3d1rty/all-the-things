<%= form_with(model: transaction, data: { turbo: false }) do |f| %>
  <% if transaction.item&.id %>
    <%= render(FormGroupComponent.new(form: f, field: :item_id, errors: transaction.errors)) do |c| %>
      <%= c.label 'Item' %>
      <%= c.select Item.where(id: transaction.item.id).collect {|i| ["#{i.name} - #{i.sku} (ID: #{i.id})", i.id] }, html_options: {} %>
    <% end %>
  <% else %>
    <%= render(FormGroupComponent.new(form: f, field: :item_id, errors: transaction.errors)) do |c| %>
      <%= c.label 'Item' %>
      <%= c.select Item.where('sold_at is NULL AND stocked_at IS NOT NULL').order(updated_at: :desc).collect {|i| ["#{i.name} - #{i.sku} (ID: #{i.id})", i.id] }, html_options: {} %>
    <% end %>
  <% end %>

  <%= render(FormGroupComponent.new(form: f, field: :sale_price, errors: transaction.errors)) do |c| %>
    <%= c.label 'Sale Price' %>
    <%= c.text html_options: {} %>
  <% end %>

  <%= render(FormGroupComponent.new(form: f, field: :date_of_sale, errors: transaction.errors)) do |c| %>
    <%= c.label 'Date of Sale' %>
    <%= c.date html_options: { end_year: DateTime.current.year } %>
  <% end %>

  <%= tag.div class: 'text-center mt-6' do %>
    <%= render(ButtonTagComponent.new(color: 'blue', type: :submit, options: { data: { turbo: false } })) do %>
        Save
    <% end %>
  <% end %>
<% end %>
